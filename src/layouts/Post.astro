---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import HeroImage from "../components/HeroImage.astro";
import { ClientRouter } from "astro:transitions";
import { useTranslations } from "../i18n/utils";

type entry = "blog" | "projects";
type Props = CollectionEntry<entry>["data"] & { lang: string };

const {
    title,
    description,
    pubDate,
    updatedDate,
    heroImage,
    heroGif,
    lang,
}: Props = Astro.props;
const t = useTranslations(lang);
---

<html lang={lang}>
    <head>
        <ClientRouter />
        <BaseHead
            title={title}
            description={description}
            image={heroGif ? heroGif : heroImage}
        />
        <style>
            main {
                width: calc(100% - 2em);
                max-width: 100%;
                margin: 0;
                color: var(--color-text);
            }
            .prose {
                width: 720px;
                max-width: calc(100% - 2em);
                margin: auto;
                padding: 1em;
            }
            .title {
                margin-bottom: 1em;
                padding: 1em 0;
                text-align: center;
                line-height: 1;
            }

            .title h1 {
                margin: 0 0 0.5em 0;
            }
            .date {
                margin-bottom: 0.5em;
                color: rgb(var(--color-date));
            }
            .last-updated-on {
                font-style: italic;
            }
        </style>
    </head>
    <body>
        <Header lang={lang} />
        <main>
            <article>
                <HeroImage heroImage={heroImage} heroGif={heroGif} />
                <div class="prose" transition:animate="fade">
                    <div class="title">
                        <div class="date">
                            <FormattedDate date={pubDate} lang={lang} />
                            {
                                updatedDate && (
                                    <div class="last-updated-on">
                                        {t("post.lastUpdated")}{" "}
                                        <FormattedDate
                                            date={updatedDate}
                                            lang={lang}
                                        />
                                    </div>
                                )
                            }
                        </div>
                        <h1>{title}</h1>
                        <hr />
                    </div>
                    <slot />
                </div>
            </article>
        </main>
        <Footer lang={lang} />
    </body>
</html>
