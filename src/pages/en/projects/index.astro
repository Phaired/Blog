---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
// import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts"; // Removed
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import ReadingTime from "../../components/ReadingTime.astro";
import { ClientRouter } from "astro:transitions";
import { Image } from "astro:assets";
// import { getLangFromUrl } from "../../../i18n/utils"; // Removed
import { useTranslations, getLocalizedPathname } from "../../../i18n/utils"; // Adjusted path

const lang = Astro.params.lang as keyof typeof import('../../../i18n/ui').ui;
const t = useTranslations(lang);

const allProjects = await getCollection("projects");
const posts = allProjects // Renamed from 'posts' to 'projects' for clarity, but instructions use 'posts'
    .filter(post => post.slug.startsWith(lang + '/'))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang={lang}>
    <head>
        <ClientRouter />
        <BaseHead title={t('site.consts.title')} description={t('site.consts.description')} />
        <style>
            main {
                width: 1020px;
            }
            ul {
                display: flex;
                flex-wrap: wrap;
                gap: 2rem;
                list-style-type: none;
                margin: 0;
                padding: 0;
            }
            ul li {
                width: calc(50% - 1rem);
            }
            ul li * {
                text-decoration: none;
                transition: 0.2s ease;
            }
            ul li:first-child {
                width: 100%;
                margin-bottom: 1rem;
                text-align: center;
            }
            ul li:first-child img {
                width: 1020px;
            }
            ul li:first-child .title {
                font-size: 2.369rem;
            }
            ul li img {
                margin-bottom: 0.5rem;
                border-radius: 12px;
            }
            ul li a {
                display: block;
            }
            .title {
                margin: 0;
                color: rgb(var(--color-text));
                line-height: 1;
            }
            .date {
                margin: 0;
                color: rgb(var(--color-date));
            }
            ul li a:hover h4,
            ul li a:hover .date {
                color: rgb(var(--accent));
            }
            ul a:hover img {
                box-shadow: var(--box-shadow);
            }
            @media (max-width: 720px) {
                ul {
                    gap: 0.5em;
                }
                ul li {
                    width: 100%;
                    text-align: center;
                }
                ul li:first-child {
                    margin-bottom: 0;
                }
                ul li:first-child .title {
                    font-size: 1.563em;
                }
            }
        </style>
    </head>
    <body>
        <Header />
        <main>
            <section>
                <ul>
                    {
                        posts.map((post) => { // Variable 'post' kept as per original code structure
                            const slugWithoutLang = post.slug.substring(post.slug.indexOf('/') + 1);
                            const localizedLink = getLocalizedPathname(`/projects/${slugWithoutLang}`, lang);
                            return (
                            <li>
                                <a href={localizedLink}>
                                    <Image
                                        width={720}
                                        height={360}
                                        src={post.data.heroImage ?? ""}
                                        alt=""
                                        loading="lazy"
                                    />
                                    <h4 class="title">{post.data.title}</h4>
                                    <p class="date">
                                        <FormattedDate
                                            date={post.data.pubDate}
                                        />{" "}
                                        - <ReadingTime body={post.body} />
                                    </p>
                                </a>
                            </li>
                        )})
                    }
                </ul>
            </section>
        </main>
        <Footer />
    </body>
</html>
